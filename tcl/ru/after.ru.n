'\"
'\" Copyright (c) 1990-1994 The Regents of the University of California.
'\" Copyright (c) 1994-1996 Sun Microsystems, Inc.
'\"
'\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" CVS: @(#) $Id: after.ru.n,v 1.1.1.1 2003/10/16 19:01:11 alex Exp $
'\" 
.so man.macros
.TH after n 7.5 Tcl "Tcl Встроенные Команды"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
after \- Выполняет команду с отсрочкой по времени
.SH SYNOPSIS
\fBafter \fIмс\fR
.sp
\fBafter \fIмс \fR?\fIскрипт скрипт скрипт ...\fR?
.sp
\fBafter cancel \fIid\fR
.sp
\fBafter cancel \fIскрипт скрипт скрипт ...\fR
.sp
\fBafter idle \fR?\fIскрипт скрипт скрипт ...\fR?
.sp
\fBafter info \fR?\fIid\fR?
.BE

.SH DESCRIPTION
.PP
Эта команда используется для отсроченного выполнения программы или для
выполнения команды в фоновом режиме когда-либо в будущем. Команда
имеет несколько форм, в зависимости от первого аргумента команды:
.TP
\fBafter \fIмс\fR
\fIМс\fR должно быть целым числом, указывающим время в миллисекундах.
Команда бездействует \fIмс\fR миллисекунд. Пока команда бездействует,
приложение не отвечает ни на какие события.
.TP
\fBafter \fIмс \fR?\fIскрипт скрипт скрипт ...\fR?
В этой форме команда сразу возвращает управление программе, но при
этом команда обеспечивает выполнение Tcl команды \fIскрипт скрипт
скрипт ...\fR позже, через \fIмс\fR
миллисекунд как обработчика событий.
Команда \fIскрипт скрипт скрипт ...\fR будет выполнена только один раз
в указанное время.
Отложенная команда формируется объединением всех аргументов
\fIскрипт\fR таким же образом, каким это делает команда \fBconcat\fR.
Команда будет выполнена на глобальном уровне (вне контекста какой-либо
Tcl процедуры). Если во время выполнения отложенной команды происходят
ошибки, то  для сообщения о них используется механизм \fBbgerror\fR.
Команда \fBafter\fR возвращает идентификатор, который может быть
использован для отмены отложенной команды с помощью \fBafter cancel\fR.
.TP
\fBafter cancel \fIid\fR
Отменяет выполнение ранее назначенной отложенной команды.
\fIId\fR указывает какая команда должна быть отменена, это должно быть
ранее возвращённое командой \fBafter\fR значение.
Если команда уже была выполнена, то \fBafter cancel\fR игнорируется.
.TP
\fBafter cancel \fIскрипт скрипт ...\fR
Эта команда также отменяет выполнение отложенной команды.
Аргументы \fIскрипт\fR объединяются вместе через пробел (как
команда \fBconcat\fR).Если обнаруживается отложенная команда, которая
совпадает с полученной строкой, то она отменяется и не будет никогда
выполняться, если такой команды  не обнаруживается, то \fBafter
cancel\fR игнорируется.
.TP
\fBafter idle \fIскрипт скрипт \fR?\fIскрипт скрипт ...\fR?
Объединяет аргументы \fIскрипт\fR через пробел (как команда
\fBconcat\fR) и размещает полученный скрипт для выполнения тогда,
когда других события не будут обрабатываться. Скрипт будет выполнятся
только один раз. Команда возвращает идентификатор, который может быть
использован для отмены отложенной команды с помощью \fBafter cancel\fR.
Если во время выполнения отложенной команды происходят
ошибки, то  для сообщения о них используется механизм \fBbgerror\fR.
Команда \fBafter\fR возвращает идентификатор, который может быть
использован для отмены отложенной команды с помощью \fBafter cancel\fR.
.TP
\fBafter cancel \fIid\fR
Отменяет выполнение ранее назначенной отложенной команды.
\fIId\fR указывает какая команда должна быть отменена, это должно быть
ранее возвращённое командой \fBafter\fR значение.
Если команда уже была выполнена, то \fBafter cancel\fR игнорируется.
.TP
\fBafter cancel \fIскрипт скрипт ...\fR
Эта команда также отменяет выполнение отложенной команды.
Аргументы \fIскрипт\fR объединяются вместе через пробел (как
команда \fBconcat\fR).Если обнаруживается отложенная команда, которая
совпадает с полученной строкой, то она отменяется и не будет никогда
выполняться, если такой команды  не обнаруживается, то \fBafter
cancel\fR игнорируется.
.TP
\fBafter idle \fIскрипт скрипт \fR?\fIскрипт скрипт ...\fR?
Объединяет аргументы \fIскрипт\fR через пробел (как команда
\fBconcat\fR) и размещает полученный скрипт для выполнения тогда,
когда других события не будут обрабатываться. Скрипт будет выполнятся
только один раз. Команда возвращает идентификатор, который может быть
использован для отмены отложенной команды с помощью \fBafter cancel\fR.
Если во время выполнения отложенной команды происходят
ошибки, то  для сообщения о них используется механизм \fBbgerror\fR.
Команда \fBafter\fR возвращает идентификатор, который может быть
использован для отмены отложенной команды с помощью \fBafter cancel\fR.
.TP
\fBafter cancel \fIid\fR
Отменяет выполнение ранее назначенной отложенной команды.
\fIId\fR указывает какая команда должна быть отменена, это должно быть
ранее возвращённое командой \fBafter\fR значение.
Если команда уже была выполнена, то \fBafter cancel\fR игнорируется.
.TP
\fBafter cancel \fIскрипт скрипт ...\fR
Эта команда также отменяет выполнение отложенной команды.
Аргументы \fIскрипт\fR объединяются вместе через пробел (как
команда \fBconcat\fR). Если обнаруживается отложенная команда, которая
совпадает с полученной строкой, то она отменяется и не будет никогда
выполняться, если такой команды  не обнаруживается, то \fBafter
cancel\fR игнорируется.
.TP
\fBafter idle \fIскрипт скрипт \fR?\fIскрипт скрипт ...\fR?
Объединяет аргументы \fIскрипт\fR через пробел (как команда
\fBconcat\fR) и размещает полученный скрипт для выполнения тогда,
когда других события не будут обрабатываться. Скрипт будет выполнятся
только один раз. Команда возвращает идентификатор, который может быть
использован для отмены отложенной команды с помощью \fBafter cancel\fR.
Если во время выполнения отложенной команды происходят
ошибки, то  для сообщения о них используется механизм \fBbgerror\fR.
.TP
\fBafter info \fR?\fIid\fR?
Эта команда возвращает информацию о существующих обработчиках
событий. Если идентификатор \fIid\fR не указан, то команда возвращает
список идентификаторов для всех существующих обработчиков событий,
созданных командой \fBafter\fR для этого интерпретатора.
Если используется \fIid\fR, то он указывает на существующий
обработчик, \fIid\fR должен быть значением, возвращённым предыдущим
вызовом \fBafter\fR и не должен быть выполняемым или отменённым.
В этом случае команда возвращает список из двух элементов.
Первый элемент списка - скрипт, ассоциированный с \fIid\fR, а
второй элемент - \fBidle\fR или \fBtimer\fR в зависимости от того,
какого рода обработчиком событий является скрипт.
.LP
Формы \fBafter \fIмс\fR и \fBafter idle\fR предполагают, что
приложение управляется событиями: отложенные команды не будут
выполнятся до тех пор, пока приложение не перейдёт в цикл обработки событий.
В приложениях, которые обычно не являются событийно-управляемыми,
такие, как \fBtclsh\fR, вход в цикл обработки событий может быть
осуществлён с помощью команд \fBvwait\fR и \fBupdate\fR.

.SH "SEE ALSO"
bgerror(n), concat(n), update(n), vwait(n)

.SH KEYWORDS
отмена, задержка, idle callback, бездействовать, время, cancel, delay, idle callback, sleep, time

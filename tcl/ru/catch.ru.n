'\"
'\" Copyright (c) 1993-1994 The Regents of the University of California.
'\" Copyright (c) 1994-1996 Sun Microsystems, Inc.
'\"
'\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id: catch.ru.n,v 1.1.1.1 2003/10/16 19:01:11 alex Exp $
'\" 
.so man.macros
.TH catch n "8.0" Tcl "Tcl Встроенные Команды"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
catch \- Выполняет скрипт и обрабатывает исключительные ситуации

.SH SYNOPSIS
\fBcatch\fI скрипт \fR?\fIимяПеременной\fR?
.BE

.SH DESCRIPTION
.PP
Команда \fBcatch\fR может быть использована для перехвата ошибок,
возникающих в процессе интерпретации \fIскрипта\fR. \fBCatch\fR
вызывает рекурсивно интерпретатор Tcl для выполнения \fIскрипта\fR и
всегда завершает выполнение без ошибок, независимо от любых ошибок,
возникающих при выполнении \fIскрипта\fR.
.PP
Если при выполнении \fIскрипта\fR произошла ошибка, то команда
\fBcatch\fR возвращает целое число, не равное нулю, соответствующее
коду исключительной ситуации(коды определены в файле tcl.h). Если
указан аргумент \fIимяПеременной\fR, то сообщение об ошибке, возникшей
при интерпретации \fIскрипта\fR присваивается переменной с указанным именем.
.PP
Если интерпретация \fIскрипта\fR завершилась без ошибок, то команда
\fBcatch\fR возвращает 0 (TCL_OK), и значение, возвращённое
\fBскриптом\fR, присваивается указанной переменной.
.PP
Заметьте, что \fBcatch\fR перехватывает все исключительные ситуации,
включая те, что создаются командами \fBbreak\fR и \fBcontinue\fR, а
также ошибки. Единственный вид ошибок, которые не перехватываются -
это синтаксические ошибки, обнаруживаемые при компиляции скрипта. Это
происходит потому, что команда \fBcatch\fR перехватывает только
ошибки, возникающие во время выполнения \fIскрипта\fR. Во время
компиляции команды \fBcatch\fR, компилируется \fIскрипт\fR и любые
синтаксические ошибки генерируют Tcl ошибку.

.SH EXAMPLES

Команда \fBcatch\fR может быть использована в команде \fBif\fR
следующим образом.

.CS
if { [catch {open $someFile w} fid] } {
    puts stderr "Не могу открыть $someFile для записи\\n$fid"
    exit 1
}
.CE
Команда \fBcatch\fR не перехватывает синтаксические ошибки,
возникающие при компиляции скрипта. При первом вызове процедуры
\fBfoo\fR тело процедуры будет скомпилировано и будет сгенерированна
Tcl ошибка.

.CS
proc foo {} {
    catch {expr {1 +- }}
}
.CE

.SH "SEE ALSO" 
error(n), break(n), continue(n)

.SH KEYWORDS
перехватать, ошибка, catch, error

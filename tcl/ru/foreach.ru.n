'\"
'\" Copyright (c) 1993 The Regents of the University of California.
'\" Copyright (c) 1994-1996 Sun Microsystems, Inc.
'\"
'\" See the file "license.terms" for information on usage and redistribution
'\" of this file, and for a DISCLAIMER OF ALL WARRANTIES.
'\" 
'\" RCS: @(#) $Id: foreach.ru.n,v 1.1 2003/10/16 19:49:20 alex Exp $
'\" 
.so man.macros
.TH foreach n "" Tcl "Tcl Built-In Commands"
.BS
'\" Note:  do not modify the .SH NAME line immediately below!
.SH NAME
foreach \- Цикл по всем элементам одного или более списков
.SH SYNOPSIS
\fBforeach \fIимяПеременной список телоЦикла\fR
.br
\fBforeach \fIсписокПеременных1 список1\fR ?\fIсписокПеременных2 список2 ...\fR? \fIтелоЦикла\fR
.BE

.SH DESCRIPTION
.PP
Команда \fBforeach\fR организует цикл, в котором переменная(ые) цикла получают
значения из одного или более списков.
В простейшем случае имеется одна переменная цикла, \fIимяПеременной\fR,
и один \fIсписок\fR, представляющий собой список значений для присвоения
переменной цикла \fIимяПеременной\fR.
Аргумент \fIтелоЦикла\fR - Tcl скрипт. Для каждого элемента из \fIсписка\fR
(в порядке с первого до последнего), команда \fBforeach\fR присваивает
содержимое элемента списка указанной переменной, как если бы для извлечения
элементов из списка использовалась команда \fBlindex\fR, затем вызывается
Tcl интерпретатор для выполнения \fIтелаЦикла\fR.
The \fIbody\fR argument is a Tcl script.
.PP
В общем случае в команде \fBforeach\fR может быть указано более одного списка
значений (т.е. \fIсписок1\fR и \fIсписок2\fR) и каждый список значений может
быть ассоциирован со списком переменных цикла (т.е. \fIсписокПеременных1\fR и
\fIсписокПеременных2\fR). Во время каждой итерации цикла переменным каждого
\fIспискаПеременных\fR присваиваиваются последовательно значения из
соответствующего \fIсписка\fR. Значения извлекаются из списков в порядке от
первого к последнему, и каждое значение используется только один раз.  Общее
количество итераций цикла выбирается интерпретатором таким образом, чтобы
использовалсь все значений из всех списков. Если список значений не содержит
достаточного количества элементов для каждой \fIпеременнойЦикла\fR для каждой
итерации, то недостающие элементы списков будут заполнены пустыми значениями.
.PP
Команды \fBbreak\fR и \fBcontinue\fR могут быть вызваны в \fIтелеЦикла\fR
и будут выполнятся таким же образом, как и в команде \fBfor\fR.
\fBForeach\fR возвращает пустую строку.
.SH EXAMPLES
.PP
Нижеприведённый цикл использует i и j в качестве переменных цикла для
перебора пар элементов одного списка
.DS
set x {}
foreach {i j} {a b c d e f} {
    lappend x $j $i
}
# Значение переменной x - "b a d c f e"
# В цикле было произведено 3 итерации.
.DE
.PP
Следующий цикл использует переменные i и j для одновременного перебора
двух списков.
.DS
set x {}
foreach i {a b c} j {d e f g} {
    lappend x $i $j
}
# Значение переменной x - "a d b e c f {} g"
# В цикле было произведено 4 итерации.
.DE
.PP
2 формы объединены в следующем операторе:
.DS
set x {}
foreach i {a b c} {j k} {d e f g} {
    lappend x $i $j $k
}
# Значение переменной x - "a d e b f g c {} {}"
# В цикле было произведено 3 итерации.
.DE

.SH "SEE ALSO"
for(n), while(n), break(n), continue(n)

.SH KEYWORDS
для каждого, итерация, список, зацикливание, foreach, iteration, list, looping

